version: "3.6"

networks:
  monitoring:

services:
  cadvisor:
    image: google/cadvisor:v0.27.4
    networks:
      - monitoring
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock,ro
      - /:/rootfs,ro
      - /var/run:/var/run,ro
      - /sys:/sys,ro
      - /var/lib/docker/:/var/lib/docker,ro
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.20'
          memory: 256M
        reservations:
          cpus: '0.10'
          memory: 128M

  node-exporter:
    build:
        context: .
        dockerfile: Dockerfile.node-exporter
    networks:
      - monitoring
    volumes:
      - /proc:/host/proc,ro
      - /sys:/host/sys,ro
      - /:/rootfs,ro
      - /etc/hostname:/etc/host_hostname,ro
    hostname: "{{.Node.ID}}"
    environment:
      HOST_HOSTNAME: /etc/host_hostname
    command:  --path.procfs /host/proc --path.sysfs /host/sys --collector.textfile.directory /  --collector.filesystem.ignored-mount-points "^/(sys|proc|dev|host|etc)($$|/)"
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.20'
          memory: 64M
        reservations:
          cpus: '0.10'
          memory: 16M
  alertmanager:
    image: basi/alertmanager:${ALERTMANAGER_VERSION:-v0.8.0}
    networks:
      - monitoring
      # - logging
    ports:
     - "9093:9093"
    environment:
      SLACK_API: ${SLACK_API:-YOURTOKENGOESHERE}
      LOGSTASH_URL: http://logstash:8080/
    command: -config.file=/etc/alertmanager/config.yml
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.1'
          memory: 32M
        reservations:
          cpus: '0.01'
          memory: 16M

  prometheus:
    build:
        context: .
        dockerfile: Dockerfile.prometheus
    ports:
      - "9090"
    networks:
      - monitoring
    command: -config.file=/etc/prometheus/prometheus.yml -storage.local.path=/prometheus -web.console.libraries=/etc/prometheus/console_libraries -web.console.templates=/etc/prometheus/consoles -alertmanager.url=http://alertmanager:9093
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 1024M
        reservations:
          cpus: '0.50'
          memory: 128M

  grafana:
    build:
        context: .
        dockerfile: Dockerfile.grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_PASSWORD:-admin}
      PROMETHEUS_ENDPOINT: http://prometheus:9090
      ELASTICSEARCH_ENDPOINT: ${ES_ADDRESS:-http://elasticsearch:9200}
      ELASTICSEARCH_USER: ${ES_USERNAME}
      ELASTICSEARCH_PASSWORD: ${ES_PASSWORD}
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 128M
        reservations:
          cpus: '0.50'
          memory: 32M
